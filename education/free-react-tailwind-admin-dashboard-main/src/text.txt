function ManageStudent() {
  
  const [data, setData] = useState<DataStudents[]>([]);
  
  const [meta,setMeta] = useState<Meta>({
    limit: 15,
    page: 1,
    total: 15
  });

  console.log(meta)
  
  const [selectedClass, setSelectedClass] = useState('');
  const [isModalOpen, setModalOpen] = useState(false);
  const [filters, setFilters] = useState<{
    className: string;
    ageMin: number | null;
    ageMax: number | null;
    status: string;
  }>({ className: '', ageMin: null, ageMax: null, status: '' });

  const { isOpen, openModal, closeModal } = useModal();
  useEffect(()=>{
      getStudents({limit: meta.limit, page : meta.page}).then(res => {
        setMeta(res.meta);
        setData(res.data)
      }).catch((err)=>{
        console.log(err)
      })
  },[])
  
 const [form, setForm] = useState<FormData>({
      email: "",
      username: "",
      age: "",
      avatar: "",
      address: "",
      codeId: "",
      phone: ""
    });
 const handleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {
        const { name, value } = e.target;
        setForm((prev) => ({
          ...prev,
          [name]: value,
        }));
       
      }, []);

       const handleSave = async () => {

          closeModal();
        };
      
 /* const filteredData = data.filter((student) => {
    const matchClass =
      !filters.className || student.className === filters.className;
    const matchAgeMin =
      filters.ageMin === null || student.age >= filters.ageMin;
    const matchAgeMax =
      filters.ageMax === null || student.age <= filters.ageMax;
    const matchStatus =
      !filters.status || student.status === filters.status;

    return matchClass && matchAgeMin && matchAgeMax && matchStatus;
  });*/

  /*const filteredData = selectedClass
    ? data.filter((student) => student.className === selectedClass)
    : data;
*/
  return (
    <>
      <PageMeta
        title="Management Students"
        description="tracking the information students"
      />
      <PageBreadcrumb pageTitle="Management Students" />
      
      <div className="space-y-6">
     {/*  <ClassFilter
        classes={mockClasses}
        selectedClass={selectedClass}
        onChange={setSelectedClass}
      />*/}
          <StudentTable  data={data} meta={meta} setMeta={setMeta}
        onCreate={openModal} />
      </div>
      <Modal isOpen={isOpen} onClose={closeModal} className="max-w-[700px] m-4">
        <div className="no-scrollbar relative w-full max-w-[700px] overflow-y-auto rounded-3xl bg-white p-4 dark:bg-gray-900 lg:p-11">
          <div className="px-2 pr-14">
            <h4 className="mb-2 text-2xl font-semibold text-gray-800 dark:text-white/90">
              Create Student Information
            </h4>
          </div>
          <form className="flex flex-col">
            <div className="custom-scrollbar h-[450px] overflow-y-auto px-2 pb-3">
              <div className="mt-7">

                <div className="grid grid-cols-1 gap-x-6 gap-y-5 lg:grid-cols-2">
                
                  <div className="col-span-2 lg:col-span-1">
                    <Label>Username</Label>
                    <Input type="text"  name="username"  onChange={handleChange} value={form.username}/>
                  </div>

                  <div className="col-span-2 lg:col-span-1">
                    <Label>Age</Label>
                    <Input type="text" name="age" value={form.age}  onChange={handleChange}  />
                  </div>

                  <div className="col-span-2 lg:col-span-1">
                    <Label>email</Label>
                    <Input type="text" disabled name="email" value={form.email}  onChange={handleChange} />
                  </div>

                  <div className="col-span-2 lg:col-span-1">
                    <Label>Phone</Label>
                    <Input type="text" name="phone" value={form.phone}  onChange={handleChange} />
                  </div>


                  <div className="col-span-2 lg:col-span-1">
                    <Label>Address</Label>
                    <Input type="text" name="address" value={form.address}  onChange={handleChange} />
                  </div>

                  <div className="col-span-2 lg:col-span-1">
                    <Label>Code Id</Label>
                    <Input type="text" name="codeId" value={form.codeId}  onChange={handleChange} />
                  </div>
                </div>
              </div>
            </div>
            <div className="flex items-center gap-3 px-2 mt-6 lg:justify-end">
              <Button size="sm" variant="outline" onClick={closeModal}>
                Close
              </Button>
              <Button size="sm" onClick={handleSave}>
                Save Changes
              </Button>
            </div>
          </form>
        </div>
      </Modal>
    </>
  )
}

export default ManageStudent

I want ti limit useEffect by "meta" but it being  runing many times again